apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 21
    }

    buildTypes {
        release {
            minifyEnabled true
        }
        debug {
            minifyEnabled false
        }
        android {
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs = ["-Xopt-in=kotlin.RequiresOptIn"]
        jvmTarget = "1.8"
        useIR = true
    }

    buildFeatures {
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = versions.compose_compiler_version
    }
}

dependencies {
    implementation project(':core-common')
    implementation project(':core-logger')
    implementation project(':core-settings')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin_version}"
    implementation "androidx.core:core-ktx:${versions.core_ktx}"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "com.google.android.material:material:${versions.material}"
    implementation "com.google.code.gson:gson:${versions.gson}"

    implementation("androidx.compose.material:material:${versions.compose_version}")

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlin_coroutines_version}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlin_coroutines_version}"
    implementation "com.github.K1rakishou:Fuck-Storage-Access-Framework:${versions.fsaf}"

    implementation "com.google.dagger:dagger:${versions.dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger_version}"

    testImplementation "junit:junit:${versions.junit}"
}